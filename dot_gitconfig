# global gitconfig

[user]
  name = Bertrand Sim
  email = 46756885+BertrandSim@users.noreply.github.com
[color]
  ui = auto
[color "diff"]
[color "diff-highlight"]
  oldNormal = red 
  oldHighlight = red ul
  # oldHighlight = red 52
  newNormal = green 
  newHighlight = green ul
  # newHighlight = green 22
[color "status"]
[color "branch"]
[core]
  # editor = gvim
  # editor = nvim
  editor = vim
  autocrlf = input 	# convert crlf to lf when adding, commiting
  # pager = less -FRSX
  # whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  whitespace = -trailing-space	# do not raise tailing spaces at EOL and EOF as errors
  # symlinks = false
  # excludesfile = ~/.gitignore
[pager]
  # # show word-diffs within line diffs
  # # using diff-highlight, which is `locate`d within git/contrib/
  # log  = diff-highlight | less
  # show = diff-highlight | less
  # diff = diff-highlight | less
[commit]
  verbose = true
[diff]
  tool = vimdiff
  guitool = gvimdiff
[difftool]
  prompt = false
[merge]
  ff = false     # use merge --no-ff by default
  tool = vimdiff
  guitool = gvimdiff
  conflictstyle = diff3
[mergetool]
  prompt = false
[github]
  user = BertrandSim
  # token = 
[push]
  default = current
[filter "lfs"]
# still not sure what these do
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[alias]
  alias-c = ! git config --get-regexp '^alias\\.'  # lists aliases
  alias   = ! git config --get-regexp '^alias\\.' | sed -e s/^alias\\.//  -e s/\\ /\\ \\=\\ /   # in 'abbr = cmd' format
  alias-s = ! git alias | sort   # in 'abbr = cmd' format, sorted alphabetically 
  conf    = config
  conf-l  = config --local
  conf-g  = config --global
  conf-s  = config --system
  conf-f  = config --file
  #
  # ---interacting---
  ad      = add
  rs      = reset
  cho     = checkout
  chob    = checkout -b
  fe      = fetch
  df      = diff
  dfc     = diff --cached
    # show a word diff (vs line diff)
  dfw     = diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
  # dfw     = -c color.diff.new='green reverse' -c color.diff.old='red reverse' diff --color-words=.	
  dfwc    = !"git dfw --cached"
    # highlight words on top of line diffs   
  dfh     = -c pager.diff='diff-highlight | less' diff
  dfhc    = !"git dfh --cached"
  dfs     = diff --stat
  dfsc    = !"git dfs --cached"
  dt      = difftool
  dtc     = difftool --cached
  ss      = show --compact-summary # show the summary (--stat)s of changes made by a commit
  met     = mergetool
  mert    = mergetool
  subm    = submodule
  subm-u  = submodule update
  # ---committing---
  com     = commit
  comm    = commit -m
  coma    = commit --amend
  cone    = commit --amend --no-edit
  comfi   = commit --fixup # yep, feeling comfortable now!
  # ---rebasing---
  rebi    = rebase --interactive
  refine  = !GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash # REbase FIxups, NoEdit
  #
  # ---displaying info---
  br      = branch
  bra     = branch --all
  st      = status
  # sts = status -sb
  # ---logs---
  lgo     = log --oneline
  ldog    = log --decorate --oneline --graph
  ldoga   = log --decorate --oneline --graph --all

  lg = log --graph --pretty=format:'%C(auto)%d%C(reset) %C(auto)%h%C(reset) %C(dim green)(%ad)%C(reset) %C(auto)%s%C(reset)' --date=format:'%d/%m/%Y' # '%d/%m/%Y %H:%M'
  lga = !"git lg --all"
  lad = !"git lg --all --simplify-by-decoration"  # shows branch topology
  # some examples of git logs below: #
  # lg = log --graph --pretty=format:'%C(yellow)%h%C(auto)%d%Creset %s %C(white)- %an, %ar%Creset'
  # lga = log --graph -- decorate --name-status --all
  # lg1 = log --graph --pretty=format:'%C(bold blue)%h%C(reset) %C(bold green)(%ad)%C(reset) %C(white)%s%C(reset) %C(auto)%d%C(reset)' --date=format:'%d/%m/%Y' # '%d/%m/%Y %H:%M'
  # lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
  # lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
  # lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
